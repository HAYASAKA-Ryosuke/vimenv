#!/usr/bin/env bash
# Summary: List hook scripts for a given rbenv command
# Usage: rbenv hooks <command>

set -e
[ -n "$RBENV_DEBUG" ] && set -x

# Provide rbenv completions
if [ "$1" = "--complete" ]; then
  echo exec
  echo rehash
  echo which
  exit
fi

RBENV_COMMAND="$1"
if [ -z "$RBENV_COMMAND" ]; then
  rbenv-help --usage hooks >&2
  exit 1
fi

resolve_link() {
  $(type -p greadlink readlink | head -1) $1
}

realpath() {
  local cwd="$(pwd)"
  local base="$(basename $1)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  echo "$(pwd)/$base"
  cd "$cwd"
}

IFS=: hook_paths=($RBENV_HOOK_PATH)
length="${#hook_paths[@]}"
pad_size="${#length}"
index=0

# Sort hooks alphabetically by filename first, then by the order of
# their parent directory in $RBENV_HOOK_PATH when there are
# duplicates. Sorting affords a primitive but useful level of control
# over the order in which a hook runs relative to other hooks.

{ shopt -s nullglob
  for path in "${hook_paths[@]}"; do
    index=$(( $index + 1 ))
    for script in "${path}/${RBENV_COMMAND}"/*.bash; do
      printf "%s:%*d:%s\n" "${script##*/}" \
        "$pad_size" "$index" "$(realpath "$script")"
    done
  done
  shopt -u nullglob
} | sort | awk -F : '{print $3}'
